// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkPlatformBn.Model;

#nullable disable

namespace WorkPlatformBn.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250807065824_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkPlatformBn.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.WorkerCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WorkerDetailsId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerCategories");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.WorkerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompanyUser")
                        .HasColumnType("bit");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerDetails");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.Worker", b =>
                {
                    b.HasOne("WorkPlatformBn.Model.User", "User")
                        .WithMany("Workers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.WorkerCategory", b =>
                {
                    b.HasOne("WorkPlatformBn.Model.Category", "Category")
                        .WithMany("WorkerCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkPlatformBn.Model.WorkerDetail", "WorkerDetails")
                        .WithMany("WorkerCategory")
                        .HasForeignKey("WorkerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkPlatformBn.Model.Worker", null)
                        .WithMany("WorkerCategory")
                        .HasForeignKey("WorkerId");

                    b.Navigation("Category");

                    b.Navigation("WorkerDetails");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.WorkerDetail", b =>
                {
                    b.HasOne("WorkPlatformBn.Model.Worker", "Worker")
                        .WithMany("WorkerDetail")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.Category", b =>
                {
                    b.Navigation("WorkerCategory");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.User", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.Worker", b =>
                {
                    b.Navigation("WorkerCategory");

                    b.Navigation("WorkerDetail");
                });

            modelBuilder.Entity("WorkPlatformBn.Model.WorkerDetail", b =>
                {
                    b.Navigation("WorkerCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
